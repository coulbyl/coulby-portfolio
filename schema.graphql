# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Breed {
  category: Category
  categoryId: String
  createdAt: String!
  id: String!
  name: String!
  pets: [Pet!]!
  updatedAt: String!
}

type Category {
  breeds: [Breed!]!
  createdAt: DateTime!
  deletedAt: String
  id: String!
  name: String!
  pets: [Pet!]!
  updatedAt: DateTime!
}

input CreateBreedInput {
  categoryId: String
  name: String!
}

input CreateCategoryInput {
  name: String!
}

input CreatePetInput {
  age: Float
  breedId: String
  categoryId: String
  description: String!
  name: String!
  photos: [String!]!
}

input CreateUserInput {
  city: String!
  email: String!
  fullName: String!
  password: String!
  phone: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type LoginResult {
  accessToken: String!
}

type Mutation {
  create(createCategoryInput: CreateCategoryInput!): Category!
  createBreed(createBreedInput: CreateBreedInput!): Breed!
  createPet(createPetInput: CreatePetInput!): Pet!
  login(loginInput: LoginInput!): LoginResult!
  removeBreed(id: String!): Breed!
  removeCategory(id: String!): ValidResponse!
  removePet(id: String!): Pet!
  removeUser(id: String!): User!
  signup(createUserInput: CreateUserInput!): User!
  updateBreed(updateBreedInput: UpdateBreedInput!): Breed!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  updatePet(updatePetInput: UpdatePetInput!): Pet!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Pet {
  age: Float
  breed: Breed
  breedId: String
  category: Category
  categoryId: String
  createdAt: String!
  description: String!
  id: String!
  isAvailable: Boolean!
  name: String!
  owner: User
  ownerId: String
  photos: [String!]!
  updatedAt: String!
}

type Query {
  breed(id: String!): Breed!
  breeds: [Breed!]!
  categories: [Category!]!
  category(id: String!): Category!
  pet(id: String!): Pet!
  pets: [Pet!]!
  user(id: String!): User!
  users: [User!]!
}

input UpdateBreedInput {
  categoryId: String
  id: String!
  name: String
}

input UpdateCategoryInput {
  id: String!
  name: String
}

input UpdatePetInput {
  age: Float
  breedId: String
  categoryId: String
  description: String
  id: String!
  isAvailable: Boolean
  name: String
  photos: [String!]
}

input UpdateUserInput {
  city: String
  email: String
  fullName: String
  id: String!
  password: String
  phone: String
  username: String
}

type User {
  city: String!
  createdAt: String!
  deletedAt: String
  email: String!
  fullName: String!
  id: String!
  isActive: Boolean!
  isAdmin: Boolean!
  password: String!
  pets: [Pet!]!
  phone: String!
  updatedAt: String!
  username: String!
}

type ValidResponse {
  message: String!
}